name: Android CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [develop]
  release:
    types: [published]

jobs:
  check-and-build:
    name: "Lint & Build APK (unsigned)"
    runs-on: ubuntu-latest
    outputs:
      unsigned_apk: ${{ steps.upload.outputs.artifact-id }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Configure gradle.properties
        run: |
          echo "android.useAndroidX=true" >> gradle.properties
          echo "android.enableJetifier=true" >> gradle.properties

      - name: Run lint & unit tests
        run: ./gradlew lint test

      - name: Build unsigned APK
        run: ./gradlew assembleRelease

      - name: Upload unsigned APK
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: unsigned-apk
          path: app/build/outputs/apk/release/app-release-unsigned.apk

  sign-and-release:
    name: "Sign & Release APK"
    needs: check-and-build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download unsigned APK
        uses: actions/download-artifact@v3
        with:
          name: unsigned-apk
          path: .

      - name: Configure gradle.properties & keystore
        run: |
          echo "android.useAndroidX=true" >> gradle.properties
          echo "android.enableJetifier=true" >> gradle.properties
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > keystore.jks
          echo "RELEASE_STORE_FILE=keystore.jks" >> gradle.properties
          echo "RELEASE_KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> gradle.properties
          echo "RELEASE_STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> gradle.properties
          echo "RELEASE_KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> gradle.properties

      - name: Sign APK
        run: |
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
            -keystore keystore.jks \
            -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
            -keypass "${{ secrets.KEY_PASSWORD }}" \
            app-release-unsigned.apk "${{ secrets.KEY_ALIAS }}"

          zipalign -v 4 app-release-unsigned.apk app-release-signed.apk

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: app-release-signed.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

